@model FSDP.UI.MVC.Models.ContactViewModel

@{
    ViewBag.Title = "Contact";
}


@if (ViewBag.ErrorMessage != null)
{
    <h3 class="text-danger">@Html.Raw(ViewBag.ErrorMessage)</h3>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="ContactPage">
        <table id="contactTable">
            <tr>
                <td>
                    <h2>@ViewBag.Title</h2>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <div>
                            <h4>Get in touch with me!</h4>
                            <p class="col-md-12"> Please send me an email and I'll make sure to get in touch with you!</p>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "formwidth" })
                                <div>
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "formwidth" })
                                <div>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "formwidth" })
                                <div>
                                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "formwidth" })
                                <div>
                                    @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div>
                                    <input type="submit" value="Submit" class="btn btn-success" />
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}